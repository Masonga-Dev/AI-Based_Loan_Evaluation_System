# Generated by Django 4.2.7 on 2025-06-27 16:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('loan_application', '0002_loanapplication_number_of_dependents'),
        ('admin_dashboard', '0004_exportjob_dashboardwidget_analyticsreport'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('model_type', models.CharField(choices=[('loan_approval', 'Loan Approval Model'), ('risk_assessment', 'Risk Assessment Model'), ('document_verification', 'Document Verification Model'), ('fraud_detection', 'Fraud Detection Model'), ('credit_scoring', 'Credit Scoring Model')], max_length=30)),
                ('version', models.CharField(max_length=50)),
                ('config', models.JSONField(default=dict)),
                ('parameters', models.JSONField(default=dict)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('training_data_size', models.IntegerField(blank=True, null=True)),
                ('training_started_at', models.DateTimeField(blank=True, null=True)),
                ('training_completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('training', 'Training'), ('testing', 'Testing'), ('active', 'Active'), ('inactive', 'Inactive'), ('deprecated', 'Deprecated')], default='training', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('deployment_date', models.DateTimeField(blank=True, null=True)),
                ('model_file_path', models.CharField(blank=True, max_length=500)),
                ('weights_file_path', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_models', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'db_table': 'ai_model',
                'ordering': ['-created_at'],
                'unique_together': {('model_type', 'version')},
            },
        ),
        migrations.CreateModel(
            name='AIPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('review', 'Manual Review')], max_length=20)),
                ('confidence_score', models.FloatField()),
                ('risk_score', models.FloatField(blank=True, null=True)),
                ('feature_importance', models.JSONField(default=dict)),
                ('processing_time', models.FloatField(help_text='Processing time in seconds')),
                ('model_version', models.CharField(max_length=50)),
                ('actual_outcome', models.CharField(blank=True, choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')], max_length=20, null=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('feedback_provided', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_predictions', to='loan_application.loanapplication')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='admin_dashboard.aimodel')),
            ],
            options={
                'verbose_name': 'AI Prediction',
                'verbose_name_plural': 'AI Predictions',
                'db_table': 'ai_prediction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelTrainingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('model_type', models.CharField(choices=[('loan_approval', 'Loan Approval Model'), ('risk_assessment', 'Risk Assessment Model'), ('document_verification', 'Document Verification Model'), ('fraud_detection', 'Fraud Detection Model'), ('credit_scoring', 'Credit Scoring Model')], max_length=30)),
                ('training_config', models.JSONField(default=dict)),
                ('dataset_info', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('current_epoch', models.IntegerField(default=0)),
                ('total_epochs', models.IntegerField(default=100)),
                ('final_accuracy', models.FloatField(blank=True, null=True)),
                ('final_loss', models.FloatField(blank=True, null=True)),
                ('training_logs', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_jobs', to=settings.AUTH_USER_MODEL)),
                ('output_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_jobs', to='admin_dashboard.aimodel')),
            ],
            options={
                'verbose_name': 'Model Training Job',
                'verbose_name_plural': 'Model Training Jobs',
                'db_table': 'model_training_job',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ManualOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_prediction', models.CharField(max_length=20)),
                ('override_decision', models.CharField(choices=[('approve', 'Approve'), ('reject', 'Reject'), ('review', 'Further Review')], max_length=20)),
                ('reason', models.CharField(choices=[('insufficient_data', 'Insufficient Data'), ('policy_exception', 'Policy Exception'), ('human_judgment', 'Human Judgment'), ('external_factors', 'External Factors'), ('model_error', 'Model Error'), ('compliance_requirement', 'Compliance Requirement'), ('customer_relationship', 'Customer Relationship'), ('other', 'Other')], max_length=30)),
                ('detailed_reason', models.TextField()),
                ('confidence_in_override', models.IntegerField(help_text='Confidence level 1-10')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('overridden_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manual_overrides', to=settings.AUTH_USER_MODEL)),
                ('prediction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='manual_override', to='admin_dashboard.aiprediction')),
            ],
            options={
                'verbose_name': 'Manual Override',
                'verbose_name_plural': 'Manual Overrides',
                'db_table': 'manual_override',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('total_predictions', models.IntegerField(default=0)),
                ('correct_predictions', models.IntegerField(default=0)),
                ('accuracy', models.FloatField(default=0.0)),
                ('precision', models.FloatField(default=0.0)),
                ('recall', models.FloatField(default=0.0)),
                ('f1_score', models.FloatField(default=0.0)),
                ('avg_processing_time', models.FloatField(default=0.0)),
                ('min_processing_time', models.FloatField(default=0.0)),
                ('max_processing_time', models.FloatField(default=0.0)),
                ('avg_confidence', models.FloatField(default=0.0)),
                ('high_confidence_count', models.IntegerField(default=0)),
                ('low_confidence_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='admin_dashboard.aimodel')),
            ],
            options={
                'verbose_name': 'Model Performance Metric',
                'verbose_name_plural': 'Model Performance Metrics',
                'db_table': 'admin_model_performance_metric',
                'ordering': ['-date'],
                'unique_together': {('model', 'date', 'period_type')},
            },
        ),
    ]
